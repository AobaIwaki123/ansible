# SPDX-License-Identifier: MIT-0
---
# tasks file for roles/install_docker
- name: Install prerequisites for Docker repository
  ansible.builtin.apt:
    pkg:
      - ca-certificates
      - curl
      - gnupg2
      - lsb-release
    autoremove: true

- name: Disribution
  ansible.builtin.debug:
    msg: "{{ ansible_facts['distribution'] }}"

- name: New add docker apt key for Ubuntu
  ansible.builtin.get_url:
    url: https://download.docker.com/linux/ubuntu/gpg
    dest: /etc/apt/keyrings/docker.asc
    mode: '0644'
    backup: true
  when: ansible_facts['distribution'] == "Ubuntu"

- name: Add docker apt repo for Ubuntu
  ansible.builtin.apt_repository:
    repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu {{ ansible_facts['distribution_release'] }} stable"
    state: present
  when: ansible_facts['distribution'] == "Ubuntu"

- name: New add docker apt key for Debian
  ansible.builtin.get_url:
    url: https://download.docker.com/linux/debian/gpg
    dest: /etc/apt/keyrings/docker.asc
    mode: '0644'
    backup: true
  when: ansible_facts['distribution'] == "Debian"

- name: Add docker apt repo for Debian
  ansible.builtin.apt_repository:
    repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian {{ ansible_facts['distribution_release'] }} stable"
    state: present
  when: ansible_facts['distribution'] == "Debian"

- name: Update Apt cache
  ansible.builtin.apt:
    update_cache: true

- name: Install a list of packages
  ansible.builtin.apt:
    pkg:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
      - docker-compose
    force_apt_get: true # aptではなくapt-getを使う
    install_recommends: true # 依存関係のパッケージのインストールを認める
    autoremove: true

- name: Start and enable docker daemon
  ansible.builtin.service:
    name: docker
    state: started
    enabled: true

- name: Start and enable containerd daemon
  ansible.builtin.service:
    name: containerd
    state: started
    enabled: true

- name: Ensure Docker Group exists
  ansible.builtin.group:
    name: docker
    state: present

- name: Add user to Docker Group
  ansible.builtin.user:
    name: "{{ ansible_facts['env']['USER'] }}"
    groups: docker
    append: true
